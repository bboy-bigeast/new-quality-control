# Generated by Django 5.2.5 on 2025-08-22 09:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DryFilmProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(default='default', max_length=50, verbose_name='产品牌号')),
                ('batch_number', models.CharField(max_length=50, verbose_name='产品批号')),
                ('production_line', models.CharField(max_length=50, verbose_name='产线')),
                ('inspector', models.CharField(max_length=50, verbose_name='检测人')),
                ('test_date', models.DateField(verbose_name='测试日期')),
                ('sample_category', models.CharField(max_length=50, verbose_name='样品类别')),
                ('remarks', models.TextField(blank=True, verbose_name='备注')),
                ('factory_judgment', models.CharField(max_length=20, verbose_name='出厂判定')),
                ('internal_control_judgment', models.CharField(max_length=20, verbose_name='内控判定')),
                ('appearance', models.CharField(blank=True, max_length=100, verbose_name='外观')),
                ('solid_content', models.FloatField(blank=True, null=True, verbose_name='固含')),
                ('viscosity', models.FloatField(blank=True, null=True, verbose_name='粘度')),
                ('acid_value', models.FloatField(blank=True, null=True, verbose_name='酸值')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='水分')),
                ('residual_monomer', models.FloatField(blank=True, null=True, verbose_name='残单')),
                ('weight_avg_molecular_weight', models.FloatField(blank=True, null=True, verbose_name='重均分子量')),
                ('pdi', models.FloatField(blank=True, null=True, verbose_name='PDI')),
                ('color', models.FloatField(blank=True, null=True, verbose_name='色度')),
                ('polymerization_inhibitor', models.FloatField(blank=True, null=True, verbose_name='阻聚剂')),
                ('conversion_rate', models.FloatField(blank=True, null=True, verbose_name='转化率')),
                ('loading_temperature', models.FloatField(blank=True, null=True, verbose_name='装车温度')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('modified_by', models.CharField(max_length=50, verbose_name='修改人')),
                ('modification_reason', models.TextField(blank=True, verbose_name='修改原因')),
            ],
            options={
                'verbose_name': '干膜产品',
                'verbose_name_plural': '干膜产品',
                'ordering': ['-test_date', 'batch_number'],
            },
        ),
        migrations.CreateModel(
            name='ProductStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(default='DF-100', max_length=50, verbose_name='产品牌号')),
                ('test_item', models.CharField(choices=[('appearance', '外观'), ('solid_content', '固含'), ('viscosity', '粘度'), ('acid_value', '酸值'), ('moisture', '水分'), ('residual_monomer', '残单'), ('weight_avg_molecular_weight', '重均分子量'), ('pdi', 'PDI'), ('color', '色度')], max_length=50, verbose_name='检测项目')),
                ('standard_type', models.CharField(choices=[('external_control', '外控标准'), ('internal_control', '内控标准')], max_length=20, verbose_name='标准类型')),
                ('lower_limit', models.FloatField(blank=True, null=True, verbose_name='下限')),
                ('upper_limit', models.FloatField(blank=True, null=True, verbose_name='上限')),
                ('target_value', models.FloatField(blank=True, null=True, verbose_name='目标值')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '产品标准',
                'verbose_name_plural': '产品标准',
                'unique_together': {('product_code', 'test_item', 'standard_type')},
            },
        ),
    ]
